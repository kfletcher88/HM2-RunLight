#!/bin/bash

#### ===========================================================================
#### set the path to executables
#### ===========================================================================
PATH=/path/to/perl/bin/:/path/to/chainNet/:/path/to/lastz/:/path/to/gapCloser/:/path/to/sspace/:$PATH
echo $PATH

#### ===========================================================================
#### lift the file handle limit (require root privilege)
#### ===========================================================================
ulimit -n 655350

#### ===========================================================================
#### step 1: break the misjoins and output the new diploid assembly
#### ===========================================================================
#### default input:        ./{assembly_name}.fa.gz
#### default final output: ./{assembly_name}_mp.fa.gz
 
./hm.batchA1.initiation_and_all_lastz  your_assembly_name
./hm.batchA2.chainNet_and_netToMaf     your_assembly_name
./hm.batchA3.misjoin_processing        your_assembly_name

#### ===========================================================================
#### step 2: separate/merge two alleles and output haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_mp.fa.gz
#### default final output: ./{assembly_name}_mp_ref.fa.gz
#### default final output: ./{assembly_name}_mp_alt.fa.gz
  
./hm.batchB1.initiation_and_all_lastz             your_assembly_name_mp
./hm.batchB2.chainNet_and_netToMaf                your_assembly_name_mp
./hm.batchB3.haplomerger                          your_assembly_name_mp
./hm.batchB4.refine_unpaired_sequences            your_assembly_name_mp
./hm.batchB5.merge_paired_and_unpaired_sequences  your_assembly_name_mp

#### ===========================================================================
#### step 3: further scaffold the obtained haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_mp_ref.fa.gz
#### default final output: ./{assembly_name}_mp_ref_ss.fa.gz
#### default final output: ./{assembly_name}_mp_alt_ss.fa.gz
  
./hm.batchC1.hierarchical_scaffolding                      your_assembly_name_mp_ref
./hm.batchC2.update_reference_and_alternative_assemblies   your_assembly_name_mp_ref

#### ===========================================================================
#### step 4: remove tandem errors from haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_mp_ref_ss.fa.gz
#### default final output: ./{assembly_name}_mp_ref/alt_ss_rt.fa.gz

./hm.batchD1.initiation_and_all_lastz     your_assembly_name_mp_ref/alt_ss
./hm.batchD2.chainNet_and_netToMaf        your_assembly_name_mp_ref/alt_ss
./hm.batchD3.remove_tandem_assemblies     your_assembly_name_mp_ref/alt_ss

#### ===========================================================================
#### step 5: try to close Ngaps in haploid assemblies
#### ===========================================================================
#### default input:        ./{assembly_name}_mp_ref_ss_rt.fa.gz
#### default final output: ./{assembly_name}_mp_ref/alt_ss_rt_gf.fa.gz

./hm.batchE1.wrapper_for_gapCloser_v1.12  your_assembly_name_mp_ref/alt_ss_rt